var http = require('http');

function Strategy() {
 this.localhost = null;
 this.urlhost = null;
 this.urls={
		 authorize:'/api/interface/index.php?module=authorize&action=login&callbak=',
		 getuserinfo:'/api/interface/index.php?module=user&action=getuserinfo&token=',
 };
 
}

Strategy.prototype.init = function(urlhost){
	return require('./init')(this ,urlhost);
}

Strategy.prototype.sethost = function(localhost ,urlhost){
	if(localhost.substr(-1)=='/'){
		localhost = localhost.substr(0 ,(localhost.length-1));
	}
	if(urlhost.substr(-1)=='/'){
		urlhost = urlhost.substr(0 ,(urlhost.length-1));
	}
	this.localhost = localhost;
	this.urlhost = urlhost;
}

Strategy.prototype.request = function(accesstoken , callback){
	http.get(this.urlhost +this.urls.getuserinfo + accesstoken, function(ress) {
		  console.log("Got response: " + ress.statusCode);
		  ress.setEncoding('utf8');
		  var body='';
		　　ress.on('data', function(data) {
				body += data;
		　　}).on('end', function () {
				body = JSON.parse(body);
				if(body.statusCode == 1){
					callback(null ,body.data);
				}else{
					callback("Got error: " + JSON.stringify(body.error)+",message"+JSON.stringify(body.msg));
				}
			});
		}).on('error', function(e) {
		  console.log("Got error: " + e.message);
		  callback("Got error: " + e.message);
		});
};
//生成第一次验证的url带上base64的回调url编码
Strategy.prototype.requestUrl = function(option){
	option.callbak = this.localhost + option.callbak;
	var buf = new Buffer(option.callbak);
	return this.urlhost + this.urls.authorize + buf.toString('base64');
};

Strategy.prototype.authenticate = function(accesstoken , callback){
	this.request(this.urlhost +this.urls.getuserinfo + accesstoken,function(err ,data){
		if(err){
			callback(err);
		}
		else{
			var profile = { provider: 'ali_discuz' };
			profile.id = data.uid;
			profile.displayName = {};
			profile.username = data.username;
			profile.profileUrl = {};
			profile.emails = data.email;
			
			profile._raw = JSON.stringify(data);
			profile._json = data;
			callback(null ,profile);
		}
	});
};
module.exports = Strategy;